(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,r(o.key),o)}}function r(t){var r=function(t){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=e(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(r)?r:r+""}function n(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function o(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}var i=new WeakMap,a=new WeakSet,c=function(){return e=function e(t){var r;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n(this,r=a),r.add(this),function(e,t){n(e,t),t.set(e,"")}(this,i),function(e,t,r){e.set(o(e,t),r)}(i,this,t),!t||""===t.trim())throw new Error("1fichier.com API key not configured. Please add your API key in the extension settings.")},(r=[{key:"getFileInfo",value:async function(e){return o(a,this,s).call(this,"https://api.1fichier.com/v1/file/info.cgi",e)}},{key:"getFileDownload",value:async function(e){return o(a,this,s).call(this,"https://api.1fichier.com/v1/download/get_token.cgi",e)}}])&&t(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,r}();async function s(e,t){var r,n=await fetch(e,{method:"POST",headers:{Authorization:"Bearer ".concat((r=i,r.get(o(r,this)))),"Content-Type":"application/json"},body:JSON.stringify(t)});return await n.json()}gopeed.events.onResolve(async function(e){gopeed.logger.info("1fichier link resolution: ".concat(t));var t=e.req.url,r=gopeed.settings.apiKey;try{var n=new c(r);gopeed.logger.debug("Appel API url: ".concat(t));var o=await n.getFileInfo({url:t});gopeed.logger.debug("Réponse API getFileInfo: ".concat(JSON.stringify(o)));var i=await n.getFileDownload({url:t,cdn:0,restrict_ip:0});if(gopeed.logger.debug("Réponse API getFileDownload: ".concat(JSON.stringify(i))),"OK"!==i.status)throw new Error("Erreur API 1fichier: ".concat(i.message||"Erreur inconnue"));if(!i.url)throw new Error("Aucune URL de téléchargement retournée par l'API");e.res={name:"",size:o.size,range:!1,files:[{name:o.filename,size:o.size,req:{url:i.url,headers:{}}}]},gopeed.logger.info("Résolution terminée avec succès")}catch(e){throw gopeed.logger.error("Erreur: ".concat(e.message)),new Error("Impossible de résoudre le téléchargement 1fichier: ".concat(e.message))}})})();